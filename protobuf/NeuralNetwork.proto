syntax = "proto3";
option optimize_for = LITE_RUNTIME;
package NeuralNetwork;

enum ActivationFunctionData {
    LINEAR = 0;
    RELU = 1;
    SIGMOID = 2;
    TANH = 3;
}

message MatrixData {
    repeated float data = 1;
    int32 rows = 2;
    int32 cols = 3;
}

enum OptimizationAlgorithm {
    SGD = 0; // Stochastic Gradient Descent
    ADAM = 1; // Adaptive Moment Estimation
}

message OptimizerData {
    OptimizationAlgorithm algorithm = 1;
    float learning_rate = 2;
    optional float beta1 = 3; // For ADAM
    optional float beta2 = 4; // For ADAM
    optional float epsilon = 5; // For ADAM
}

message NeuralNetworkData {
    int32 num_inputs = 1;
    repeated int32 hidden_layer_sizes = 2;
    int32 num_outputs = 3;
    ActivationFunctionData input_activation = 4;
    optional ActivationFunctionData hidden_activation = 5;
    ActivationFunctionData output_activation = 6;
    repeated MatrixData weights = 7;
    repeated MatrixData biases = 8;
    optional OptimizerData optimizer = 9;
}
